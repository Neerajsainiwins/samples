@page "/admin/Dashboard"
@attribute [Authorize(Roles = "Adminstrator")]
@inject IAuthorService authorService
@inject IUserService userService
@inject IBookService bookService

<PageTitle>Admin Dashboard</PageTitle>
<div class="container-fluid my-4">
    <!-- Dashboard Header -->
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h1 class="display-4 fw-bold">Welcome to Dashboard</h1>
            <p class="text-muted">Manage your Authors, Books, and Platform activities at a glance.</p>
        </div>
    </div>
        <div class="row g-4">
            <!-- Card 1: Total Authors -->
            <div class="col-md-3 d-flex">
                <div class="card border-0 shadow-sm bg-gradient-primary text-white flex-fill">
                    <div class="card-body text-center">
                        <h5 class="card-title">Total Authors</h5>
                        <h3 class="display-6 fw-bold">@authorCount</h3>
                        <p class="card-text">Registered authors on the platform.</p>
                    </div>
                </div>
            </div>

            <!-- Card 2: Total Users -->
            <div class="col-md-3 d-flex">
                <div class="card border-0 shadow-sm bg-gradient-secondary text-white flex-fill">
                    <div class="card-body text-center">
                        <h5 class="card-title">Total Users</h5>
                        <h3 class="display-6 fw-bold">@userCount</h3>
                        <p class="card-text">Users registered on the platform.</p>
                    </div>
                </div>
            </div>

            <!-- Card 3: Active Books -->
            <div class="col-md-3 d-flex">
                <div class="card border-0 shadow-sm bg-gradient-success text-white flex-fill">
                    <div class="card-body text-center">
                        <h5 class="card-title">Active Books</h5>
                        <h3 class="display-6 fw-bold">@bookCount</h3>
                        <p class="card-text">Books currently active on the platform.</p>
                    </div>
                </div>
            </div>

            <!-- Card 4: Pending Approvals -->
            <div class="col-md-3 d-flex">
                <div class="card border-0 shadow-sm bg-gradient-warning text-white flex-fill">
                    <div class="card-body text-center">
                        <h5 class="card-title">Pending Approvals</h5>
                        <h3 class="display-6 fw-bold">@bookCount</h3>
                        <p class="card-text">Books awaiting approval.</p>
                    </div>
                </div>
            </div>
        </div>
</div>

@code {
    private int authorCount, userCount, bookCount = 0;
    private int? response;
    protected override async Task OnInitializedAsync()
    {
        await FetchAuthorTotalCount();
        await FetchBookTotalCount();
        await FetchUserTotalCount();

    }
    private async Task<int> FetchAuthorTotalCount()
    {
        response = await authorService.GetAuthorTotalCount();
        if (int.TryParse(response?.ToString(), out int parsedCount))
        {
            authorCount = parsedCount;
        }
        return authorCount;
    }
    private async Task<int> FetchBookTotalCount()
    {
        response = await bookService.GetBookTotalCount();

        if (int.TryParse(response?.ToString(), out int parsedCount))
        {
            bookCount = parsedCount;
        }
        return bookCount;
    }
    private async Task<int> FetchUserTotalCount()
    {
        response = await userService.GetUserTotalCount();
        if (int.TryParse(response?.ToString(), out int parsedCount))
        {
            userCount = parsedCount;
        }
        return userCount;
    }
}

