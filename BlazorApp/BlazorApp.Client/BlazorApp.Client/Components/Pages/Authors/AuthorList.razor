@page "/author/index"
@inject IAuthorService authorService
@inject GetClaimsFromToken getClaimsFromToken
@inject ILogger<AuthorAddUpdateDTO> Logger
@using Microsoft.AspNetCore.SignalR.Client
@inject HubConnection hubConnection

<div class="container-fluid mt-2">
    <div class="row">
        <div class="col-12">
            <h3>Authors</h3>
            <!-- Filters -->
            <div class="d-flex justify-content-between mb-3">
                <button class="btn btn-primary btn-sm" @onclick="() => OpenModal(ModalType.Add)">
                    <i class="bi bi-plus"></i> Add Author
                </button>
                <div class="d-flex align-items-center">
                    <input type="text" value="@NameFilter" @oninput="OnInputChanged"
                           class="form-control form-control-sm" style="border-radius: 5px; width: 250px;"
                           placeholder="Filter by first name" />
                </div>
            </div>


            <div class="mb-3">
                <label for="pageSize" class="form-label">Page Size:</label>
                <select @onchange="PageSizeChanged" class="form-select form-select-sm">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                    <option value="25">25</option>
                </select>
            </div>
            <!-- Authors List -->
            @if (Authors != null && Authors.Any())
            {
                <div class="table-wrapper">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th id="FirstName" @onclick='() => ApplySorting("FirstName")'>First Name</th>
                                <th id="LastName" @onclick='() => ApplySorting("LastName")'>Last Name</th>
                                <th id="Bio" @onclick='() => ApplySorting("Bio")'>Bio</th>
                                <th id="Action">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var author in Authors)
                            {
                                <tr>
                                    <td>@author.FirstName</td>
                                    <td>@author.LastName</td>
                                    <td>@author.Bio</td>
                                    <td>
                                        <button class="btn btn-warning btn-sm" @onclick="() => OpenModal(ModalType.Update, author)"><i class="bi bi-pencil"></i></button>
                                        <button class="btn btn-danger btn-sm" @onclick="() => OpenModal(ModalType.Delete, author)"><i class="bi bi-trash"></i></button>
                                        <button class="btn btn-primary btn-sm" @onclick="() => OpenModal(ModalType.View, author)"><i class="bi bi-eye"></i></button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p>No authors available.</p>
            }

            <!-- Pagination -->
            <div>
                <button style="border-radius:5px" @onclick="PreviousPage" disabled="@(!CanGoToPreviousPage)">Previous</button>
                <button style="border-radius:5px" @onclick="NextPage" disabled="@(!CanGoToNextPage)">Next</button>
            </div>

            <!-- Current Page Display -->
            <div class="pagination-info">
                <p>Page @PageIndex of @TotalPages</p>
            </div>

        </div>
    </div>
</div>


<!-- Modal Templates -->
<div class="modal @(isModalVisible ? "show" : "")" tabindex="-1" role="dialog" style="display: @(isModalVisible ? "block" : "none")">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Authors</h5>
                <button type="button" class="close" @onclick=CloseModal>
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-row">
                    @if (modalType == ModalType.Add || modalType == ModalType.Update)
                    {
                        <form>
                            <div class="form-group">
                                <label for="FirstName">First Name: </label>
                                <input type="text" class="form-control" @bind="@currentAuthor.FirstName" placeholder="Enter First Name" />
                            </div>
                            <div class="form-group">
                                <label for="LastName">Last Name: </label>
                                <input type="text" class="form-control" @bind="@currentAuthor.LastName" placeholder="Enter Last Name" />
                            </div>
                            <div class="form-group">
                                <label for="Bio">Bio: </label>
                                <input type="text" class="form-control" @bind="@currentAuthor.Bio" placeholder="Enter Bio" />
                            </div>
                        </form>
                    }
                    else if (modalType == ModalType.View)
                    {
                        <p><strong>First Name:</strong> @currentAuthor.FirstName</p>
                        <p><strong>Last Name:</strong> @currentAuthor.LastName</p>
                        <p><strong>Bio:</strong> @currentAuthor.Bio</p>
                    }
                    else if (modalType == ModalType.Delete)
                    {
                        <p>Are you sure you want to delete this author?</p>
                    }

                </div>
                <div class="modal-footer">
                    @if (modalType == ModalType.Delete)
                    {
                        <button class="btn btn-danger" @onclick="() => ConfirmDeleteAuthor(deleteAuthorId)">Delete</button>
                        <button class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
                    }
                    else if (modalType == ModalType.View)
                    {
                        <button class="btn btn-success" @onclick="() => CloseModal()">Close</button>
                    }
                    else
                    {
                        <button class="btn btn-success" @onclick="() => SaveAuthor()">Save</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


